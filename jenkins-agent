#!/usr/bin/env bash

# MIT License

# Copyright (c) 2017, BTower <labz@btower.net>

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# Usage jenkins-agent.sh [options] -url http://jenkins [SOME] [PARAMS]
# Optional environment variables :
# * AAA : xxx

set -o nounset
set -o noclobber
set -o errexit
set -o pipefail

# -deleteExistingClients
# -disableSslVerification
# -description VAL
# -executors N
# -labels VAL
# -master VAL
# -maxRetryInterval N
# -mode MODE
# -name VAL
# (Deprecated, use -Djava.util.logging.config.file={path}logging.properties instead)

env

if [ $# -eq 1 ]; then
  # if `docker run` only has one arguments, we assume user is running alternate command like `bash` to inspect the image
  exec "$@"
else
  SWARM_JAR="-jar /usr/share/jenkins/swarm.jar"
  SLAVE_JAR="-jar /usr/share/jenkins/slave.jar"

  # Jenkins remoting (slave mode)
  OPT_API="-url http://ci-master:50000"
  # Jenkins url (swarm mode)
  OPT_URL="-master http://ci-master:8080"

  OPT_LABELS="-labelsFile /home/jenkins/swarm-labels.cfg"
  OPT_NAME="-name noname"
  OPT_EXEC="-executors 3"
  OPT_USER="-username sca_swarm"

  OPT_RETR_INT="-maxRetryInterval 60"
  OPT_RETR_COUNT="-retry 15"
  OPT_RETR_WAIT="-retryInterval 15"

  OPT_SWARM_NOID="-disableClientsUniqueId"
  OPT_SWARM_MODE="-mode normal"
  OPT_SWARM_DELEXCLI="-deleteExistingClients"

  if [ -z ${AGENT_MODE+x} ]; then
    # Default to swarm
    AGENT_MODE="SWARM"
  else
    # Check either SWARM or SLAVE
    if [ "${AGENT_MODE}" = "SLAVE" ]; then
      AGENT_MODE="SLAVE";
    else
      AGENT_MODE="SWARM"
    fi;
  fi

  if [ -z ${JAVA_OPTS+x} ]; then
    JAVA_OPTS="";
  fi

  # if -tunnel is not provided try env vars
  #if [[ "$@" != *"-tunnel "* ]]; then
  #  if [ ! -z ${AGENT_TUNNEL+x} ]; then
  #    TUNNEL="-tunnel $AGENT_TUNNEL"
  #  fi
  #fi

  if [ ! -z ${MASTER_URL+x} ]; then
    OPT_API="-url $MASTER_URL"
    OPT_URL="-master $MASTER_URL"
  fi

  if [ ! -z ${AGENT_USER+x} ]; then
    OPT_USER="-username $AGENT_USER"
  fi

  # TODO: check for no spaces
  if [ ! -z ${AGENT_NAME+x} ]; then
    OPT_NAME="-name $AGENT_NAME"
  fi

  # TODO: check for numbers
  if [ ! -z ${AGENT_EXEC+x} ]; then
    OPT_EXEC="-executors $AGENT_EXEC"
  fi

  #if [ -z "$JNLP_PROTOCOL_OPTS" ]; then
  #  echo "Warning: JnlpProtocol3 is disabled by default, use JNLP_PROTOCOL_OPTS to alter the behavior"
  #  JNLP_PROTOCOL_OPTS="-Dorg.jenkinsci.remoting.engine.JnlpProtocol3.disabled=true"
  #fi

  # If both required options are defined, do not pass the parameters
  #OPT_SECRET=""
  #if [ ! -z ${AGENT_SECRET+x} ]; then
  #  if [[ "$@" != *"${AGENT_SECRET}"* ]]; then
  #   OPT_SECRET="${AGENT_SECRET}"
  #  else
  #    echo "Warning: SECRET is defined twice in command-line arguments and the environment variable"
  #  fi
  #fi

  # TODO: Handle the case when the command-line and Environment variable contain different values.
  # It is fine it blows up for now since it should lead to an error anyway.
  # exec java $JAVA_OPTS $JNLP_PROTOCOL_OPTS -cp /usr/share/jenkins/slave.jar hudson.remoting.jnlp.Main -headless $TUNNEL $URL $OPT_JENKINS_SECRET $OPT_JENKINS_AGENT_NAME "$@"

  # -disableSslVerification or -sslFingerprints
  # TODO: NPE FIX
  # https://issues.jenkins-ci.org/browse/JENKINS-43674
  # need to use -disableSslVerification or -sslFingerprints
  NPE_FIX=-disableSslVerification
  OPT_RETR="${OPT_RETR_INT} ${OPT_RETR_COUNT} ${OPT_RETR_WAIT}"
  OPT_SWARM="${OPT_SWARM_NOID} ${OPT_SWARM_MODE} ${OPT_SWARM_DELEXCLI}"

  # TODO: has to use better way to get container uuid
  OPT_NAME="${OPT_NAME}-$(hostname)"

  while (true); do
    echo "executing swarm agent ..."
    java $JAVA_OPTS $SWARM_JAR $NPE_FIX $OPT_URL $OPT_RETR $OPT_SWARM $OPT_NAME $OPT_EXEC $OPT_USER -passwordEnvVariable "SWARM_PWD" $OPT_LABELS
    echo "swarm agent terminated ..."
    sleep 10
  done;
fi
